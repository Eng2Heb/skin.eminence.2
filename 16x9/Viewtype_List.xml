<?xml version="1.0" encoding="UTF-8"?>
<includes>
    <!-- LIST -->
    <include name="Viewtype_List">
        <control type="group">
            <visible>Control.IsVisible(550)</visible>
            <left>bigpad</left>
            <right>bigpad</right>
            <top>bigpad</top>
            <height>posterh</height>

            <include content="Object_Poster">
                <param name="width" value="posterw" />
            </include>
            <include content="View_List">
                <param name="viewlabel" value="31223" />
                <param name="posx" value="0" />
                <param name="width" value="listw" />
                <param name="id" value="550" />
                <param name="condition" value="[Container.Content(movies) + [StringCompare(Skin.String(Skin.ForcedView.movies),$LOCALIZE[31223]) | IsEmpty(Skin.String(Skin.ForcedView.movies)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(sets) + [StringCompare(Skin.String(Skin.ForcedView.sets),$LOCALIZE[31223]) | IsEmpty(Skin.String(Skin.ForcedView.sets)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(tvshows) + [StringCompare(Skin.String(Skin.ForcedView.tvshows),$LOCALIZE[31223]) | IsEmpty(Skin.String(Skin.ForcedView.tvshows)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(seasons) + [StringCompare(Skin.String(Skin.ForcedView.seasons),$LOCALIZE[31223]) | IsEmpty(Skin.String(Skin.ForcedView.seasons)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(episodes) + [StringCompare(Skin.String(Skin.ForcedView.episodes),$LOCALIZE[31223]) | IsEmpty(Skin.String(Skin.ForcedView.episodes)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(actors) + [StringCompare(Skin.String(Skin.ForcedView.actors),$LOCALIZE[31223]) | IsEmpty(Skin.String(Skin.ForcedView.actors)) | !Skin.HasSetting(Skin.ForcedView)]]" />
            </include>
            <control type="group">
                <width>listw</width>
                <include>Object_Arrows_Vertical</include>
            </control>
        </control>
    </include>
    <include name="Viewtype_SquareList">
        <control type="group">
            <visible>Control.IsVisible(50)</visible>
            <left>20</left>
            <right>20</right>
            <top>20</top>
            <height>posterh</height>
            <include content="Object_Poster">
                <param name="width" value="posterh" />
            </include>
            <include content="View_List">
                <param name="viewlabel" value="31221" />
                <param name="posx" value="0" />
                <param name="width" value="listinfow" />
                <param name="id" value="50" />
                <param name="condition" value="[Container.Content(artists) + [StringCompare(Skin.String(Skin.ForcedView.artists),$LOCALIZE[31221]) | IsEmpty(Skin.String(Skin.ForcedView.artists)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(albums) + [StringCompare(Skin.String(Skin.ForcedView.albums),$LOCALIZE[31221]) | IsEmpty(Skin.String(Skin.ForcedView.albums)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(songs) + [StringCompare(Skin.String(Skin.ForcedView.songs),$LOCALIZE[31221]) | IsEmpty(Skin.String(Skin.ForcedView.songs)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(addons) + [StringCompare(Skin.String(Skin.ForcedView.addons),$LOCALIZE[31221]) | IsEmpty(Skin.String(Skin.ForcedView.addons)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(genres) + [StringCompare(Skin.String(Skin.ForcedView.genres),$LOCALIZE[31221]) | IsEmpty(Skin.String(Skin.ForcedView.genres)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(images) + [StringCompare(Skin.String(Skin.ForcedView.images),$LOCALIZE[31221]) | IsEmpty(Skin.String(Skin.ForcedView.images)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(videos) + [StringCompare(Skin.String(Skin.ForcedView.videos),$LOCALIZE[31221]) | IsEmpty(Skin.String(Skin.ForcedView.videos)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content() + [StringCompare(Skin.String(Skin.ForcedView.),$LOCALIZE[31221]) | IsEmpty(Skin.String(Skin.ForcedView.)) | !Skin.HasSetting(Skin.ForcedView)]]" />
            </include>
            <control type="group">
                <width>listinfow</width>
                <include>Object_Arrows_Vertical</include>
            </control>
        </control>
    </include>
    <include name="Viewtype_PlainList">
        <control type="group">
            <visible>Control.IsVisible(552)</visible>
            <left>bigpad</left>
            <right>bigpad</right>
            <top>bigpad</top>
            <height>posterh</height>
            <include content="View_List">
                <param name="viewlabel" value="31215" />
                <param name="posx" value="0" />
                <param name="width" value="headlinew" />
                <param name="id" value="552" />
                <param name="condition" value="[Container.Content(movies) + [StringCompare(Skin.String(Skin.ForcedView.movies),$LOCALIZE[31215]) | IsEmpty(Skin.String(Skin.ForcedView.movies)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(sets) + [StringCompare(Skin.String(Skin.ForcedView.sets),$LOCALIZE[31215]) | IsEmpty(Skin.String(Skin.ForcedView.sets)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(tvshows) + [StringCompare(Skin.String(Skin.ForcedView.tvshows),$LOCALIZE[31215]) | IsEmpty(Skin.String(Skin.ForcedView.tvshows)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(seasons) + [StringCompare(Skin.String(Skin.ForcedView.seasons),$LOCALIZE[31215]) | IsEmpty(Skin.String(Skin.ForcedView.seasons)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(episodes) + [StringCompare(Skin.String(Skin.ForcedView.episodes),$LOCALIZE[31215]) | IsEmpty(Skin.String(Skin.ForcedView.episodes)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(actors) + [StringCompare(Skin.String(Skin.ForcedView.actors),$LOCALIZE[31215]) | IsEmpty(Skin.String(Skin.ForcedView.actors)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(artists) + [StringCompare(Skin.String(Skin.ForcedView.artists),$LOCALIZE[31215]) | IsEmpty(Skin.String(Skin.ForcedView.artists)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(albums) + [StringCompare(Skin.String(Skin.ForcedView.albums),$LOCALIZE[31215]) | IsEmpty(Skin.String(Skin.ForcedView.albums)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(songs) + [StringCompare(Skin.String(Skin.ForcedView.songs),$LOCALIZE[31215]) | IsEmpty(Skin.String(Skin.ForcedView.songs)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(addons) + [StringCompare(Skin.String(Skin.ForcedView.addons),$LOCALIZE[31215]) | IsEmpty(Skin.String(Skin.ForcedView.addons)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(genres) + [StringCompare(Skin.String(Skin.ForcedView.genres),$LOCALIZE[31215]) | IsEmpty(Skin.String(Skin.ForcedView.genres)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(images) + [StringCompare(Skin.String(Skin.ForcedView.images),$LOCALIZE[31215]) | IsEmpty(Skin.String(Skin.ForcedView.images)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(videos) + [StringCompare(Skin.String(Skin.ForcedView.videos),$LOCALIZE[31215]) | IsEmpty(Skin.String(Skin.ForcedView.videos)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content() + [StringCompare(Skin.String(Skin.ForcedView.),$LOCALIZE[31215]) | IsEmpty(Skin.String(Skin.ForcedView.)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(tags) + [StringCompare(Skin.String(Skin.ForcedView.tags),$LOCALIZE[31215]) | IsEmpty(Skin.String(Skin.ForcedView.tags)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(years) + [StringCompare(Skin.String(Skin.ForcedView.years),$LOCALIZE[31215]) | IsEmpty(Skin.String(Skin.ForcedView.years)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(countries) + [StringCompare(Skin.String(Skin.ForcedView.countries),$LOCALIZE[31215]) | IsEmpty(Skin.String(Skin.ForcedView.countries)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(studios) + [StringCompare(Skin.String(Skin.ForcedView.studios),$LOCALIZE[31215]) | IsEmpty(Skin.String(Skin.ForcedView.studios)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(playlists) + [StringCompare(Skin.String(Skin.ForcedView.playlists),$LOCALIZE[31215]) | IsEmpty(Skin.String(Skin.ForcedView.playlists)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(musicvideos) + [StringCompare(Skin.String(Skin.ForcedView.musicvideos),$LOCALIZE[31215]) | IsEmpty(Skin.String(Skin.ForcedView.musicvideos)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(directors) + [StringCompare(Skin.String(Skin.ForcedView.directors),$LOCALIZE[31215]) | IsEmpty(Skin.String(Skin.ForcedView.directors)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(files) + [StringCompare(Skin.String(Skin.ForcedView.files),$LOCALIZE[31215]) | IsEmpty(Skin.String(Skin.ForcedView.files)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(mixed) + [StringCompare(Skin.String(Skin.ForcedView.mixed),$LOCALIZE[31215]) | IsEmpty(Skin.String(Skin.ForcedView.mixed)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(unknown) + [StringCompare(Skin.String(Skin.ForcedView.unknown),$LOCALIZE[31215]) | IsEmpty(Skin.String(Skin.ForcedView.unknown)) | !Skin.HasSetting(Skin.ForcedView)]]" />
            </include>
            <control type="group">
                <width>listw</width>
                <include>Object_Arrows_Vertical</include>
            </control>
        </control>
    </include>

    <!-- MEDIA INFO -->
    <include name="Viewtype_MediaInfo">
        <control type="group">
            <visible>Control.IsVisible(51)</visible>
            <left>bigpad</left>
            <right>bigpad</right>
            <top>bigpad</top>
            <height>posterh</height>
            <include content="View_List">
                <param name="viewlabel" value="544" />
                <param name="posx" value="0" />
                <param name="width" value="listinfow" />
                <param name="id" value="51" />
                <param name="condition" value="[Container.Content(movies) + [StringCompare(Skin.String(Skin.ForcedView.movies),$LOCALIZE[544]) | IsEmpty(Skin.String(Skin.ForcedView.movies)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(sets) + [StringCompare(Skin.String(Skin.ForcedView.sets),$LOCALIZE[544]) | IsEmpty(Skin.String(Skin.ForcedView.sets)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(tvshows) + [StringCompare(Skin.String(Skin.ForcedView.tvshows),$LOCALIZE[544]) | IsEmpty(Skin.String(Skin.ForcedView.tvshows)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(seasons) + [StringCompare(Skin.String(Skin.ForcedView.seasons),$LOCALIZE[544]) | IsEmpty(Skin.String(Skin.ForcedView.seasons)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(episodes) + [StringCompare(Skin.String(Skin.ForcedView.episodes),$LOCALIZE[544]) | IsEmpty(Skin.String(Skin.ForcedView.episodes)) | !Skin.HasSetting(Skin.ForcedView)]] |[Container.Content(artists) + [StringCompare(Skin.String(Skin.ForcedView.artists),$LOCALIZE[544]) | IsEmpty(Skin.String(Skin.ForcedView.artists)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(songs) + [StringCompare(Skin.String(Skin.ForcedView.songs),$LOCALIZE[544]) | IsEmpty(Skin.String(Skin.ForcedView.songs)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(videos) + [StringCompare(Skin.String(Skin.ForcedView.videos),$LOCALIZE[544]) | IsEmpty(Skin.String(Skin.ForcedView.videos)) | !Skin.HasSetting(Skin.ForcedView)]]" />
            </include>
            <include>Object_ExtraInfo</include>
        </control>
    </include>

    <!-- MEDIA INFO 2 -->
    <include name="Viewtype_MediaInfo2">
        <control type="group">
            <visible>Control.IsVisible(57)</visible>
            <left>bigpad</left>
            <right>bigpad</right>
            <top>bigpad</top>
            <height>posterh</height>
            <include content="View_List">
                <param name="viewlabel" value="31143" />
                <param name="posx" value="0" />
                <param name="width" value="listmediainfow" />
                <param name="id" value="57" />
                <param name="label3" value="false" />
                <param name="condition" value="[Container.Content(movies) + [StringCompare(Skin.String(Skin.ForcedView.movies),$LOCALIZE[31143]) | IsEmpty(Skin.String(Skin.ForcedView.movies)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(sets) + [StringCompare(Skin.String(Skin.ForcedView.sets),$LOCALIZE[31143]) | IsEmpty(Skin.String(Skin.ForcedView.sets)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(tvshows) + [StringCompare(Skin.String(Skin.ForcedView.tvshows),$LOCALIZE[31143]) | IsEmpty(Skin.String(Skin.ForcedView.tvshows)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(seasons) + [StringCompare(Skin.String(Skin.ForcedView.seasons),$LOCALIZE[31143]) | IsEmpty(Skin.String(Skin.ForcedView.seasons)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(episodes) + [StringCompare(Skin.String(Skin.ForcedView.episodes),$LOCALIZE[31143]) | IsEmpty(Skin.String(Skin.ForcedView.episodes)) | !Skin.HasSetting(Skin.ForcedView)]]" />
            </include>
            <include>Object_ExtraInfo2</include>
        </control>
    </include>

    <!-- INFO LIST -->
    <include name="Viewtype_InfoList">
        <control type="group">
            <visible>Control.IsVisible(53)</visible>
            <left>bigpad</left>
            <right>bigpad</right>
            <top>bigpad</top>
            <height>posterh</height>
            <include content="View_InfoList">
                <param name="id" value="53" />
                <param name="width" value="headlinew" />
                <param name="name" value="$LOCALIZE[31192]" />
                <param name="condition" value="[Container.Content(movies) + [StringCompare(Skin.String(Skin.ForcedView.movies),$LOCALIZE[31192]) | IsEmpty(Skin.String(Skin.ForcedView.movies)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(sets) + [StringCompare(Skin.String(Skin.ForcedView.sets),$LOCALIZE[31192]) | IsEmpty(Skin.String(Skin.ForcedView.sets)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(tvshows) + [StringCompare(Skin.String(Skin.ForcedView.tvshows),$LOCALIZE[31192]) | IsEmpty(Skin.String(Skin.ForcedView.tvshows)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(seasons) + [StringCompare(Skin.String(Skin.ForcedView.seasons),$LOCALIZE[31192]) | IsEmpty(Skin.String(Skin.ForcedView.seasons)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(episodes) + [StringCompare(Skin.String(Skin.ForcedView.episodes),$LOCALIZE[31192]) | IsEmpty(Skin.String(Skin.ForcedView.episodes)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(videos) + [StringCompare(Skin.String(Skin.ForcedView.videos),$LOCALIZE[31192]) | IsEmpty(Skin.String(Skin.ForcedView.videos)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(artists) + [StringCompare(Skin.String(Skin.ForcedView.artists),$LOCALIZE[31192]) | IsEmpty(Skin.String(Skin.ForcedView.artists)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(albums) + [StringCompare(Skin.String(Skin.ForcedView.albums),$LOCALIZE[31192]) | IsEmpty(Skin.String(Skin.ForcedView.albums)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(songs) + [StringCompare(Skin.String(Skin.ForcedView.songs),$LOCALIZE[31192]) | IsEmpty(Skin.String(Skin.ForcedView.songs)) | !Skin.HasSetting(Skin.ForcedView)]]" />
            </include>
        </control>
    </include>
    <include name="View_InfoList_Info">
        <control type="group">
            <left>bigpad</left>
            <right>0</right>
            <height>100%</height>
            <include>Object_Background</include>
            <control type="image">
                <right>20</right>
                <top>20</top>
                <height>32</height>
                <width>32</width>
                <texture>$VAR[Image_Indicator]</texture>
                <visible>!IsEmpty(ListItem.Overlay)</visible>
            </control>
            <control type="grouplist">
                <usecontrolcoords>true</usecontrolcoords>
                <itemgap>pad</itemgap>
                <orientation>vertical</orientation>
                <left>pad</left>
                <right>pad</right>
                <top>pad</top>
                <bottom>pad</bottom>
                <control type="label">
                    <top>pad</top>
                    <left>pad</left>
                    <right>pad</right>
                    <height>36</height>
                    <font>Font-InfoBox-Title</font>
                    <label>$VAR[Label_Title]</label>
                </control>
                <control type="label">
                    <left>pad</left>
                    <right>pad</right>
                    <height>24</height>
                    <textcolor>$VAR[HighlightColor2]</textcolor>
                    <font>Font-ListInfo-Small-Bold</font>
                    <label>$VAR[Label_GenreLine,[UPPERCASE],[/UPPERCASE]]</label>
                </control>
                <control type="textbox">
                    <top>16</top>
                    <left>pad</left>
                    <right>pad</right>
                    <height>190</height>
                    <font>Font-ListInfo</font>
                    <align>left</align>
                    <label>$VAR[Label_Plot]</label>
                    <visible>Skin.HasSetting(furniture.showflags) + Skin.HasSetting(furniture.flags.extradetail)</visible>
                </control>
                <control type="textbox">
                    <top>7</top>
                    <left>pad</left>
                    <right>pad</right>
                    <height>154</height>
                    <font>Font-ListInfo</font>
                    <align>left</align>
                    <label>$VAR[Label_Plot]</label>
                    <visible>!Skin.HasSetting(furniture.showflags) | !Skin.HasSetting(furniture.flags.extradetail)</visible>
                </control>
                <control type="label">
                    <top>13</top>
                    <left>pad</left>
                    <right>pad</right>
                    <height>20</height>
                    <align>right</align>
                    <font>Font-ListInfo-Small-Bold</font>
                    <label>$VAR[Label_ExtraInfo_Icons]</label>
                    <visible>!Skin.HasSetting(furniture.showflags) | !Skin.HasSetting(furniture.flags.extradetail)</visible>
                </control>
            </control>
        </control>
    </include>
    <include name="View_InfoList">
        <control type="group">
            <control type="group">
                <bottom>380</bottom>
                <left>0</left>
                <width>$PARAM[width]</width>
                <height>340</height>
                <visible>![Container.Content(albums) | Container.Content(songs)]</visible>
                <control type="group">
                    <width>604</width>
                    <height>100%</height>
                    <include>Object_Background</include>
                    <control type="image">
                        <texture colordiffuse="FF000000">common/white.png</texture>
                    </control>
                    <control type="image">
                        <fadetime>200</fadetime>
                        <aspectratio>keep</aspectratio>
                        <texture>$VAR[Image_Thumb]</texture>
                    </control>
                </control>
                <control type="group">
                    <left>604</left>
                    <include>View_InfoList_Info</include>
                </control>
            </control>
            <control type="group">
                <bottom>380</bottom>
                <left>0</left>
                <width>$PARAM[width]</width>
                <height>340</height>
                <visible>Container.Content(albums) | Container.Content(songs)</visible>
                <control type="group">
                    <width>340</width>
                    <height>100%</height>
                    <include>Object_Background</include>
                    <control type="image">
                        <fadetime>200</fadetime>
                        <aspectratio>scale</aspectratio>
                        <texture>$INFO[ListItem.Icon]</texture>
                    </control>
                </control>
                <control type="group">
                    <left>340</left>
                    <include>View_InfoList_Info</include>
                </control>
            </control>
            <control type="group">
                <left>0</left>
                <width>$PARAM[width]</width>
                <bottom>0</bottom>
                <height>360</height>
                <include>Object_Background</include>
                <include>Object_Scrollbar</include>
            </control>
            <control type="fixedlist" id="$PARAM[id]">
                <bottom>0</bottom>
                <left>0</left>
                <width>$PARAM[width]</width>
                <height>360</height>
                <onup>$PARAM[id]</onup>
                <ondown>$PARAM[id]</ondown>
                <onleft>60</onleft>
                <onright condition="!Skin.HasSetting(KioskMode)">9000</onright>
                <pagecontrol>60</pagecontrol>
                <focusposition>2</focusposition>
                <movement>2</movement>
                <preloaditems>2</preloaditems>
                <orientation>vetical</orientation>
                <viewtype label="$PARAM[name]">list</viewtype>
                <scrolltime tween="quadratic">400</scrolltime>
                <visible>$PARAM[condition]</visible>
                <itemlayout height="72" width="$PARAM[width]">
                    <include content="View_List_Itemlayout">
                        <param name="label3" value="$PARAM[label3]" />
                        <param name="label2" value="$PARAM[label2]" />
                    </include>
                </itemlayout>

                <focusedlayout height="72" width="$PARAM[width]">
                    <control type="group">
                        <visible>!Control.HasFocus($PARAM[id])</visible>
                        <include content="View_List_Itemlayout">
                            <param name="label3" value="$PARAM[label3]" />
                            <param name="label2" value="$PARAM[label2]" />
                        </include>
                    </control>
                    <control type="group">
                        <visible>Control.HasFocus($PARAM[id])</visible>
                        <include content="View_List_Focusedlayout">
                            <param name="label3" value="$PARAM[label3]" />
                            <param name="label2" value="$PARAM[label2]" />
                        </include>
                    </control>
                </focusedlayout>
            </control>
        </control>

    </include>

    <!-- INFO LIST 2 -->
    <include name="Viewtype_InfoList2">
        <control type="group">
            <visible>Control.IsVisible(553)</visible>

            <control type="group">
                <left>bigpad</left>
                <right>bigpad</right>
                <top>bigpad</top>
                <height>posterh</height>
                <control type="group">
                    <top>-10</top>
                    <left>-10</left>
                    <right>-10</right>
                    <bottom>-10</bottom>
                    <include content="View_InfoList2">
                        <param name="id" value="553" />
                        <param name="name" value="$LOCALIZE[31220]" />
                        <param name="condition" value="[Container.Content(movies) + [StringCompare(Skin.String(Skin.ForcedView.movies),$LOCALIZE[31220]) | IsEmpty(Skin.String(Skin.ForcedView.movies)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(sets) + [StringCompare(Skin.String(Skin.ForcedView.sets),$LOCALIZE[31220]) | IsEmpty(Skin.String(Skin.ForcedView.sets)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(tvshows) + [StringCompare(Skin.String(Skin.ForcedView.tvshows),$LOCALIZE[31220]) | IsEmpty(Skin.String(Skin.ForcedView.tvshows)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(episodes) + [StringCompare(Skin.String(Skin.ForcedView.episodes),$LOCALIZE[31220]) | IsEmpty(Skin.String(Skin.ForcedView.episodes)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(videos) + [StringCompare(Skin.String(Skin.ForcedView.videos),$LOCALIZE[31220]) | IsEmpty(Skin.String(Skin.ForcedView.videos)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(artists) + [StringCompare(Skin.String(Skin.ForcedView.artists),$LOCALIZE[31220]) | IsEmpty(Skin.String(Skin.ForcedView.artists)) | !Skin.HasSetting(Skin.ForcedView)]]" />
                    </include>
                </control>
                <include>Object_Scrollbar</include>
                <include>Object_Arrows_Vertical</include>
            </control>
        </control>
    </include>
    <include name="View_InfoList2_ItemLayout">
        <control type="group">
            <left>pad</left>
            <right>pad</right>
            <top>pad</top>
            <bottom>pad</bottom>
            <include>Object_Background</include>
            <control type="group">
                <width>622</width>
                <control type="image">
                    <texture colordiffuse="FF000000">common/white.png</texture>
                </control>
                <control type="image">
                    <aspectratio>keep</aspectratio>
                    <texture background="true">$VAR[Image_Thumb]</texture>
                </control>
            </control>
            <control type="group">
                <left>622</left>
                <control type="label">
                    <top>20</top>
                    <left>30</left>
                    <right>70</right>
                    <height>36</height>
                    <textcolor>ListLabel</textcolor>
                    <font>Font-InfoBox-Title</font>
                    <label>$INFO[ListItem.Label]</label>
                </control>
                <control type="label">
                    <top>70</top>
                    <left>30</left>
                    <right>30</right>
                    <height>24</height>
                    <textcolor>$VAR[HighlightColor2]</textcolor>
                    <font>Font-ListInfo-Small-Bold</font>
                    <label>$VAR[Label_GenreLine,[UPPERCASE],[/UPPERCASE]]</label>
                </control>
                <control type="textbox">
                    <top>115</top>
                    <left>30</left>
                    <right>30</right>
                    <height>190</height>
                    <font>Font-ListInfo</font>
                    <align>left</align>
                    <autoscroll>false</autoscroll>
                    <textcolor>ListLabel</textcolor>
                    <label>$VAR[Label_ListPlot]</label>
                    <visible>Skin.HasSetting(furniture.showflags) + Skin.HasSetting(furniture.flags.extradetail)</visible>
                </control>
                <control type="textbox">
                    <top>115</top>
                    <left>30</left>
                    <right>30</right>
                    <height>154</height>
                    <font>Font-ListInfo</font>
                    <align>left</align>
                    <autoscroll>false</autoscroll>
                    <textcolor>ListLabel</textcolor>
                    <label>$VAR[Label_ListPlot]</label>
                    <visible>!Skin.HasSetting(furniture.showflags) | !Skin.HasSetting(furniture.flags.extradetail)</visible>
                </control>
                <control type="label">
                    <bottom>25</bottom>
                    <left>30</left>
                    <right>30</right>
                    <height>20</height>
                    <align>right</align>
                    <textcolor>ListLabel</textcolor>
                    <font>Font-ListInfo-Small-Bold</font>
                    <label>$VAR[Label_ExtraInfo_Icons]</label>
                    <visible>!Skin.HasSetting(furniture.showflags) | !Skin.HasSetting(furniture.flags.extradetail)</visible>
                </control>
                <control type="image">
                    <right>20</right>
                    <top>20</top>
                    <height>32</height>
                    <width>32</width>
                    <texture colordiffuse="ListLabel">$VAR[Image_Indicator]</texture>
                    <visible>!IsEmpty(ListItem.Overlay)</visible>
                </control>
            </control>
        </control> 
    </include>
    <include name="View_InfoList2">
        <param name="updownid" default="true" />
        <definition>
            <control type="group">
                <control type="list" id="$PARAM[id]">  
                    <onup condition="$PARAM[updownid]">$PARAM[id]</onup>
                    <ondown condition="$PARAM[updownid]">$PARAM[id]</ondown>
                    <onup condition="!$PARAM[updownid]">$PARAM[onup]</onup>
                    <ondown condition="!$PARAM[updownid]">$PARAM[ondown]</ondown>
                    <onright condition="!Skin.HasSetting(KioskMode)">9000</onright>
                    <onleft>60</onleft>
                    <pagecontrol>60</pagecontrol>
                    <preloaditems>2</preloaditems>
                    <orientation>vertical</orientation>
                    <viewtype label="$PARAM[name]">wide</viewtype>
                    <scrolltime tween="quadratic">400</scrolltime>
                    <visible>$PARAM[condition]</visible>
                    <itemlayout height="370" width="iconlistwideitemw">
                        <include>View_InfoList2_ItemLayout</include>
                    </itemlayout>
                    <focusedlayout height="370" width="iconlistwideitemw">
                        <control type="group">
                            <visible>!Control.HasFocus($PARAM[id])</visible>
                            <include>View_InfoList2_ItemLayout</include>
                        </control>
                        <control type="group">
                            <visible>Control.HasFocus($PARAM[id])</visible>
                            <left>pad</left>
                            <right>pad</right>
                            <top>pad</top>
                            <bottom>pad</bottom>
                            <include>Object_Background</include>
                            <control type="image">
                                <texture colordiffuse="$VAR[HighlightColor]">common/white.png</texture>
                            </control>
                            <control type="group">
                                <width>622</width>
                                <control type="image">
                                    <texture colordiffuse="FF000000">common/white.png</texture>
                                </control>
                                <control type="image">
                                    <aspectratio>keep</aspectratio>
                                    <texture background="true">$VAR[Image_Thumb]</texture>
                                </control>
                            </control>
                            <control type="group">
                                <left>622</left>
                                <control type="label">
                                    <top>20</top>
                                    <left>30</left>
                                    <right>70</right>
                                    <height>36</height>
                                    <textcolor>Selected</textcolor>
                                    <font>Font-InfoBox-Title</font>
                                    <label>$INFO[ListItem.Label]</label>
                                </control>
                                <control type="label">
                                    <top>70</top>
                                    <left>30</left>
                                    <right>30</right>
                                    <height>24</height>
                                    <textcolor>$VAR[HighlightColor2]</textcolor>
                                    <font>Font-ListInfo-Small-Bold</font>
                                    <label>$VAR[Label_GenreLine,[UPPERCASE],[/UPPERCASE]]</label>
                                </control>
                                <control type="textbox">
                                    <top>115</top>
                                    <left>30</left>
                                    <right>30</right>
                                    <height>190</height>
                                    <font>Font-ListInfo</font>
                                    <align>left</align>
                                    <textcolor>Selected</textcolor>
                                    <label>$VAR[Label_ListPlot]</label>
                                    <visible>Skin.HasSetting(furniture.showflags) + Skin.HasSetting(furniture.flags.extradetail)</visible>
                                </control>
                                <control type="textbox">
                                    <top>115</top>
                                    <left>30</left>
                                    <right>30</right>
                                    <height>154</height>
                                    <font>Font-ListInfo</font>
                                    <align>left</align>
                                    <textcolor>Selected</textcolor>
                                    <label>$VAR[Label_ListPlot]</label>
                                    <visible>!Skin.HasSetting(furniture.showflags) | !Skin.HasSetting(furniture.flags.extradetail)</visible>
                                </control>
                                <control type="label">
                                    <bottom>25</bottom>
                                    <left>30</left>
                                    <right>30</right>
                                    <height>20</height>
                                    <align>right</align>
                                    <textcolor>Selected</textcolor>
                                    <font>Font-ListInfo-Small-Bold</font>
                                    <label>$VAR[Label_ExtraInfo_Icons]</label>
                                    <visible>!Skin.HasSetting(furniture.showflags) | !Skin.HasSetting(furniture.flags.extradetail)</visible>
                                </control>
                                <control type="image">
                                    <right>20</right>
                                    <top>20</top>
                                    <height>32</height>
                                    <width>32</width>
                                    <texture colordiffuse="Selected">$VAR[Image_Indicator]</texture>
                                    <visible>!IsEmpty(ListItem.Overlay)</visible>
                                </control>
                            </control>
                        </control>
                    </focusedlayout>
                </control>
            </control>
        </definition>
    </include>

    <!-- FANART LIST -->
    <include name="Viewtype_FanartList">
        <control type="group">
            <visible>Control.IsVisible(54)</visible>
            <left>bigpad</left>
            <right>bigpad</right>
            <top>bigpad</top>
            <height>posterh</height>
            <include>Object_BigFanart</include>
            <include content="View_List">
                <param name="viewlabel" value="31164" />
                <param name="posx" value="0" />
                <param name="width" value="hubitemw" />
                <param name="id" value="54" />
                <param name="label3" value="false" />
                <param name="label2" value="false" />
                <param name="condition" value="[Container.Content(movies) + [StringCompare(Skin.String(Skin.ForcedView.movies),$LOCALIZE[31164]) | IsEmpty(Skin.String(Skin.ForcedView.movies)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(sets) + [StringCompare(Skin.String(Skin.ForcedView.sets),$LOCALIZE[31164]) | IsEmpty(Skin.String(Skin.ForcedView.sets)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(tvshows) + [StringCompare(Skin.String(Skin.ForcedView.tvshows),$LOCALIZE[31164]) | IsEmpty(Skin.String(Skin.ForcedView.tvshows)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(seasons) + [StringCompare(Skin.String(Skin.ForcedView.seasons),$LOCALIZE[31164]) | IsEmpty(Skin.String(Skin.ForcedView.seasons)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(episodes) + [StringCompare(Skin.String(Skin.ForcedView.episodes),$LOCALIZE[31164]) | IsEmpty(Skin.String(Skin.ForcedView.episodes)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(videos) + [StringCompare(Skin.String(Skin.ForcedView.videos),$LOCALIZE[31164]) | IsEmpty(Skin.String(Skin.ForcedView.videos)) | !Skin.HasSetting(Skin.ForcedView)]] | [Container.Content(artists) + [StringCompare(Skin.String(Skin.ForcedView.artists),$LOCALIZE[31164]) | IsEmpty(Skin.String(Skin.ForcedView.artists)) | !Skin.HasSetting(Skin.ForcedView)]]" />
            </include>
            <control type="group">
                <width>659</width>
                <include>Object_Arrows_Vertical</include>
            </control>
        </control>
    </include>

    <!-- LIST INCLUDE -->
    <include name="View_List_Itemlayout">
        <param name="label2" default="true" />
        <param name="label3" default="true" />
        <definition>
            <!-- Detailed List -->
            <control type="group">
                <visible>!Skin.HasSetting(lists.dontshowextralabels) + $PARAM[label3]</visible>

                <!-- Left Column -->
                <control type="label">
                    <left>30</left>
                    <right>30</right>
                    <top>0</top>
                    <height>100%</height>
                    <align>left</align>
                    <font>Font-ListInfo</font>
                    <textcolor>ListLabel</textcolor>
                    <label>$INFO[ListItem.Year]</label>
                    <visible>Container.Content(movies)</visible>
                </control>

                <!-- Main Label Column -->
                <control type="label">
                    <left>120</left>
                    <right>30</right>
                    <top>0</top>
                    <height>100%</height>
                    <textcolor>ListLabel</textcolor>
                    <label>$INFO[ListItem.Label]</label>
                    <visible>Container.Content(movies)</visible>
                </control>
                <control type="label">
                    <left>30</left>
                    <right>30</right>
                    <top>0</top>
                    <height>100%</height>
                    <textcolor>ListLabel</textcolor>
                    <label>$INFO[ListItem.Label]</label>
                    <visible>!Container.Content(movies)</visible>
                </control>

                <!-- Adaptive Label Column -->
                <control type="label">
                    <left>30</left>
                    <right>140</right>
                    <top>0</top>
                    <height>100%</height>
                    <align>right</align>
                    <font>Font-ListInfo</font>
                    <textcolor>ListLabel</textcolor>
                    <label>$VAR[Label_Label3]</label>
                    <visible>!IsEmpty(ListItem.Overlay) | [Skin.HasSetting(music.showuserratings) + IsEmpty(ListItem.Overlay) + [Container.Content(albums) | Container.Content(songs)]]</visible>
                    <visible>!Container.Content(seasons) + !Container.Content(sets)</visible>
                </control>
                <control type="label">
                    <left>30</left>
                    <right>30</right>
                    <top>0</top>
                    <height>100%</height>
                    <align>right</align>
                    <font>Font-ListInfo</font>
                    <textcolor>ListLabel</textcolor>
                    <label>$VAR[Label_Label3]</label>
                    <visible>IsEmpty(ListItem.Overlay) + ![Skin.HasSetting(music.showuserratings) + [Container.Content(albums) | Container.Content(songs)]]</visible>
                    <visible>!Container.Content(seasons) + !Container.Content(sets)</visible>
                </control>

                <!-- Indicator -->
                <control type="label" description="invisibledelimiter">
                    <right>90</right>
                    <width>32</width>
                    <height>100%</height>
                    <label>|  </label>
                    <align>right</align>
                    <font>Font-ListInfo</font>
                    <textcolor>00FFFFFF</textcolor>
                    <visible>!IsEmpty(ListItem.Overlay)</visible>
                    <visible>Container.Content(seasons) | Container.Content(sets) | [ListItem.IsFolder + String.IsEmpty(Listitem.dbtype) + !String.IsEqual(ListItem.Overlay,OverlayWatched.png) + !ListItem.IsParentFolder]</visible>
                </control>
                <control type="image">
                    <right>90</right>
                    <centertop>50%</centertop>
                    <height>32</height>
                    <width>32</width>
                    <texture colordiffuse="ListLabel">$VAR[Image_Indicator]</texture>
                    <visible>!IsEmpty(ListItem.Overlay)</visible>
                    <visible>!Container.Content(seasons) + !Container.Content(sets) + ![ListItem.IsFolder + String.IsEmpty(Listitem.dbtype) + !String.IsEqual(ListItem.Overlay,OverlayWatched.png) + !ListItem.IsParentFolder]</visible>
                </control>
                <control type="image">
                    <right>30</right>
                    <centertop>50%</centertop>
                    <height>32</height>
                    <width>32</width>
                    <texture colordiffuse="ListLabel">$VAR[Image_Indicator]</texture>
                    <visible>!IsEmpty(ListItem.Overlay)</visible>
                    <visible>Container.Content(seasons) | Container.Content(sets) | [ListItem.IsFolder + String.IsEmpty(Listitem.dbtype) + !String.IsEqual(ListItem.Overlay,OverlayWatched.png) + !ListItem.IsParentFolder]</visible>
                </control>
                <control type="image">
                    <right>75</right>
                    <centertop>51%</centertop>
                    <height>48</height>
                    <width>48</width>
                    <texture colordiffuse="ListLabel">indicator/star5.png</texture>
                    <visible>[Skin.HasSetting(music.showuserratings) + IsEmpty(ListItem.Overlay) + [Container.Content(albums) | Container.Content(songs)]]</visible>
                    <visible>!Container.Content(seasons) + !Container.Content(sets)</visible>
                    <visible>![ListItem.IsFolder + String.IsEmpty(Listitem.dbtype) + !String.IsEqual(ListItem.Overlay,OverlayWatched.png) + !ListItem.IsParentFolder]</visible>
                </control>

                <!-- Rating Column -->
                <control type="label">
                    <right>30</right>
                    <top>0</top>
                    <height>100%</height>
                    <align>right</align>
                    <aligny>center</aligny>
                    <font>Font-ListInfo</font>
                    <textcolor>ListLabel</textcolor>
                    <label>$VAR[Label_Rating]</label>
                    <visible>!IsEmpty(ListItem.Overlay) | [Skin.HasSetting(music.showuserratings) + IsEmpty(ListItem.Overlay) + [Container.Content(albums) | Container.Content(songs)]]</visible>
                    <visible>!Container.Content(seasons) + !Container.Content(sets)</visible>
                    <visible>![ListItem.IsFolder + String.IsEmpty(Listitem.dbtype) + !String.IsEqual(ListItem.Overlay,OverlayWatched.png) + !ListItem.IsParentFolder]</visible>
                </control>
            </control>

            <!-- Simplified List -->
            <control type="group">
                <visible>Skin.HasSetting(lists.dontshowextralabels) | !$PARAM[label3]</visible>
                <!-- Indicator -->
                <control type="image">
                    <left>30</left>
                    <centertop>50%</centertop>
                    <height>32</height>
                    <width>32</width>
                    <textcolor>ListLabel</textcolor>
                    <texture colordiffuse="ListLabel">$VAR[Image_Indicator]</texture>
                    <visible>!IsEmpty(ListItem.Overlay) + !Container.Content(seasons) + !Container.Content(sets) + $PARAM[label2]</visible>
                </control>

                <!-- Main Label -->
                <control type="label">
                    <left>90</left>
                    <right>30</right>
                    <top>0</top>
                    <height>100%</height>
                    <textcolor>ListLabel</textcolor>
                    <label>$INFO[ListItem.Label]</label>
                    <visible>!IsEmpty(ListItem.Overlay) + !Container.Content(seasons) + !Container.Content(sets) + $PARAM[label2]</visible>
                </control>
                <control type="label">
                    <left>30</left>
                    <right>30</right>
                    <top>0</top>
                    <height>100%</height>
                    <textcolor>ListLabel</textcolor>
                    <label>$INFO[ListItem.Label]</label>
                    <visible>IsEmpty(ListItem.Overlay) | Container.Content(seasons) | Container.Content(sets) | !$PARAM[label2]</visible>
                </control>

                <!-- Label 2 -->
                <control type="label">
                    <left>30</left>
                    <right>30</right>
                    <top>0</top>
                    <height>100%</height>
                    <align>right</align>
                    <font>Font-ListInfo</font>
                    <textcolor>ListLabel</textcolor>
                    <label>$INFO[ListItem.Label2]</label>
                    <visible>!$PARAM[label3] + !Skin.HasSetting(lists.dontshowextralabels)</visible>
                    <visible>!IsEmpty(ListItem.Overlay) + !Container.Content(seasons) + !Container.Content(sets) + $PARAM[label2]</visible>
                </control>
            </control>
        </definition>
    </include>
    <include name="View_List_Focusedlayout">
        <param name="label2" default="true" />
        <param name="label3" default="true" />
        <definition>
            <control type="image">
                <texture colordiffuse="$VAR[HighlightColor]">common/white.png</texture>
            </control>
            
            <!-- Detailed List -->
            <control type="group">
                <visible>!Skin.HasSetting(lists.dontshowextralabels) + $PARAM[label3]</visible>

                <!-- Left Column -->
                <control type="label">
                    <left>30</left>
                    <right>30</right>
                    <top>0</top>
                    <height>100%</height>
                    <align>left</align>
                    <font>Font-ListInfo</font>
                    <textcolor>Selected</textcolor>
                    <label>$INFO[ListItem.Year]</label>
                    <visible>Container.Content(movies)</visible>
                </control>

                <!-- Main Label Column -->
                <control type="label">
                    <left>120</left>
                    <right>30</right>
                    <top>0</top>
                    <height>100%</height>
                    <textcolor>Selected</textcolor>
                    <label>$INFO[ListItem.Label]</label>
                    <visible>Container.Content(movies)</visible>
                </control>
                <control type="label">
                    <left>30</left>
                    <right>30</right>
                    <top>0</top>
                    <height>100%</height>
                    <textcolor>Selected</textcolor>
                    <label>$INFO[ListItem.Label]</label>
                    <visible>!Container.Content(movies)</visible>
                </control>

                <!-- Adaptive Label Column -->
                <control type="label">
                    <left>30</left>
                    <right>140</right>
                    <top>0</top>
                    <height>100%</height>
                    <align>right</align>
                    <font>Font-ListInfo</font>
                    <textcolor>Selected</textcolor>
                    <label>$VAR[Label_Label3]</label>
                    <visible>!IsEmpty(ListItem.Overlay) | [Skin.HasSetting(music.showuserratings) + IsEmpty(ListItem.Overlay) + [Container.Content(albums) | Container.Content(songs)]]</visible>
                    <visible>!Container.Content(seasons) + !Container.Content(sets)</visible>
                </control>
                <control type="label">
                    <left>30</left>
                    <right>30</right>
                    <top>0</top>
                    <height>100%</height>
                    <align>right</align>
                    <font>Font-ListInfo</font>
                    <textcolor>Selected</textcolor>
                    <label>$VAR[Label_Label3]</label>
                    <visible>IsEmpty(ListItem.Overlay) + ![Skin.HasSetting(music.showuserratings) + [Container.Content(albums) | Container.Content(songs)]]</visible>
                    <visible>!Container.Content(seasons) + !Container.Content(sets)</visible>
                </control>

                <!-- Indicator -->
                <control type="image">
                    <right>90</right>
                    <centertop>50%</centertop>
                    <height>32</height>
                    <width>32</width>
                    <texture colordiffuse="Selected">$VAR[Image_Indicator]</texture>
                    <visible>!IsEmpty(ListItem.Overlay)</visible>
                    <visible>!Container.Content(seasons) + !Container.Content(sets) + ![ListItem.IsFolder + String.IsEmpty(Listitem.dbtype) + !String.IsEqual(ListItem.Overlay,OverlayWatched.png) + !ListItem.IsParentFolder]</visible>
                </control>
                <control type="image">
                    <right>30</right>
                    <centertop>50%</centertop>
                    <height>32</height>
                    <width>32</width>
                    <texture colordiffuse="Selected">$VAR[Image_Indicator]</texture>
                    <visible>!IsEmpty(ListItem.Overlay)</visible>
                    <visible>Container.Content(seasons) | Container.Content(sets) | [ListItem.IsFolder + String.IsEmpty(Listitem.dbtype) + !String.IsEqual(ListItem.Overlay,OverlayWatched.png) + !ListItem.IsParentFolder]</visible>
                </control>
                <control type="image">
                    <right>75</right>
                    <centertop>51%</centertop>
                    <height>48</height>
                    <width>48</width>
                    <texture colordiffuse="Selected">indicator/star5.png</texture>
                    <visible>[Skin.HasSetting(music.showuserratings) + IsEmpty(ListItem.Overlay) + [Container.Content(albums) | Container.Content(songs)]]</visible>
                    <visible>!Container.Content(seasons) + !Container.Content(sets)</visible>
                    <visible>![ListItem.IsFolder + String.IsEmpty(Listitem.dbtype) + !String.IsEqual(ListItem.Overlay,OverlayWatched.png) + !ListItem.IsParentFolder]</visible>
                </control>

                <!-- Rating Column -->
                <control type="label">
                    <right>30</right>
                    <top>0</top>
                    <height>100%</height>
                    <align>right</align>
                    <aligny>center</aligny>
                    <font>Font-ListInfo</font>
                    <textcolor>Selected</textcolor>
                    <label>$VAR[Label_Rating]</label>
                    <visible>!IsEmpty(ListItem.Overlay) | [Skin.HasSetting(music.showuserratings) + IsEmpty(ListItem.Overlay) + [Container.Content(albums) | Container.Content(songs)]]</visible>
                    <visible>!Container.Content(seasons) + !Container.Content(sets)</visible>
                    <visible>![ListItem.IsFolder + String.IsEmpty(Listitem.dbtype) + !String.IsEqual(ListItem.Overlay,OverlayWatched.png) + !ListItem.IsParentFolder]</visible>
                </control>
            </control>

            <!-- Simplified List -->
            <control type="group">
                <visible>Skin.HasSetting(lists.dontshowextralabels) | !$PARAM[label3]</visible>
                <!-- Indicator -->
                <control type="image">
                    <left>30</left>
                    <centertop>50%</centertop>
                    <height>32</height>
                    <width>32</width>
                    <textcolor>Selected</textcolor>
                    <texture colordiffuse="Selected">$VAR[Image_Indicator]</texture>
                    <visible>!IsEmpty(ListItem.Overlay) + !Container.Content(seasons) + !Container.Content(sets) + $PARAM[label2]</visible>
                </control>

                <!-- Main Label -->
                <control type="label">
                    <left>90</left>
                    <right>30</right>
                    <top>0</top>
                    <height>100%</height>
                    <textcolor>Selected</textcolor>
                    <label>$INFO[ListItem.Label]</label>
                    <visible>!IsEmpty(ListItem.Overlay) + !Container.Content(seasons) + !Container.Content(sets) + $PARAM[label2]</visible>
                </control>
                <control type="label">
                    <left>30</left>
                    <right>30</right>
                    <top>0</top>
                    <height>100%</height>
                    <textcolor>Selected</textcolor>
                    <label>$INFO[ListItem.Label]</label>
                    <visible>IsEmpty(ListItem.Overlay) | Container.Content(seasons) | Container.Content(sets) | !$PARAM[label2]</visible>
                </control>

                <!-- Label 2 -->
                <control type="label">
                    <left>30</left>
                    <right>30</right>
                    <top>0</top>
                    <height>100%</height>
                    <align>right</align>
                    <font>Font-ListInfo</font>
                    <textcolor>Selected</textcolor>
                    <label>$INFO[ListItem.Label2]</label>
                    <visible>!$PARAM[label3] + !Skin.HasSetting(lists.dontshowextralabels)</visible>
                    <visible>!IsEmpty(ListItem.Overlay) + !Container.Content(seasons) + !Container.Content(sets) + $PARAM[label2]</visible>
                </control>
            </control>
        </definition>
    </include>
    <include name="View_List">
        <param name="label3" default="true" />
        <param name="label2" default="true" />
        <definition>
            <control type="group">
                <left>$PARAM[posx]</left>
                <width>$PARAM[width]</width>
                <include>Object_Background</include>
                <include>Object_Scrollbar</include>
                <control type="panel" id="$PARAM[id]">
                    <top>0</top>
                    <left>0</left>
                    <width>$PARAM[width]</width>
                    <height>posterh</height>
                    <onup>$PARAM[id]</onup>
                    <ondown>$PARAM[id]</ondown>
                    <onleft>60</onleft>
                    <onright condition="!Skin.HasSetting(KioskMode)">9000</onright>
                    <pagecontrol>60</pagecontrol>
                    <orientation>vertical</orientation>
                    <viewtype label="$PARAM[viewlabel]">list</viewtype>
                    <scrolltime tween="quadratic">400</scrolltime>
                    <visible>$PARAM[condition]</visible>
                    <itemlayout height="72" width="$PARAM[width]">
                        <include content="View_List_Itemlayout">
                            <param name="label3" value="$PARAM[label3]" />
                            <param name="label2" value="$PARAM[label2]" />
                        </include>
                    </itemlayout>
                    <focusedlayout height="72" width="$PARAM[width]">
                        <include content="View_List_Focusedlayout">
                            <param name="label3" value="$PARAM[label3]" />
                            <param name="label2" value="$PARAM[label2]" />
                        </include>
                    </focusedlayout>
                </control>
            </control>
        </definition>
    </include>


</includes>
